<?xml version="1.0"?>
<!DOCTYPE project>
<!-- 
  To make external JARs (e.g. Lucene, junit) available to this build, 
  you can do any of the following:
  * add them to the CLASSPATH environment variable
  * create a file build.properties and specify the directory that
    contains the JARs with a line "libdir=directorypath"
  * create a directory with the name "lib" in the current directory
    and copy or link the JAR files into that directory
-->
  
<project name="lareferencia" default="build-all" basedir=".">

  <property name="version" value="0"/>
  <property file="build.properties" />
  <property environment="env"/>
  
  <condition property="envclasspath" value="${env.CLASSPATH}" else=".">
    <isset property="env.CLASSPATH"/>
  </condition>
  
  <condition property="libdir" value="./lib" else=".">
    <available file="./lib"/>
  </condition>

  <property name="basedir" value="."/>
  <property name="builddir" value="${basedir}/build"/>
  <property name="buildclassesdir" value="${builddir}/classes"/>
    
  <property name="distname" value="lareferencia-${version}"/>
  
  <property name="deploy" value="."/>
  		
  <property name="oclc_harvester_srcdir" value="../oclc_harvester/src"/>
  
  <path id="compile.classpath">
    <fileset dir="${libdir}">
      <include name="*.jar" />
    </fileset>
    <pathelement location="${buildclassesdir}"/>
    <pathelement path="${envclasspath}"/>
  </path>
  
  <path id="run.classpath">
    <path refid="compile.classpath"/>
    <pathelement location="${builddir}/${distname}.jar"/>
  </path>
  
  <target name="init">
    <mkdir dir="${builddir}"/>
    <mkdir dir="${buildclassesdir}"/>
  </target>

  <target name="compile" depends="init">
	
	<javac srcdir="${oclc_harvester_srcdir}"
		   classpathref="compile.classpath"
		   destdir="${buildclassesdir}"
		   debug="on"
		   encoding="UTF-8"
		   includeantruntime="false"
		   />
  	
  </target>

  
  <target name="jardist" depends="compile,init">

    <jar destfile="${builddir}/${distname}.jar" 
         basedir="${buildclassesdir}"/>

  </target>

  <target name="deploy" depends="compile,jardist">
	<copy todir="${basedir}">
		<fileset file="${builddir}/${distname}.jar"/>
	</copy>

  </target>	

  <target name="clean" depends="init">
    <delete dir="${builddir}"/>
  </target>


<!-- Build all -->
   <target name="build-all" 
           depends="compile, jardist"/>

</project>
